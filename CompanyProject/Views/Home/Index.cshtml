@{
    ViewBag.Title = "Index";
    ViewBag.Menu = "HomeIndex";
}
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=vmTunqr4NGOQqja4cCzyKP7ndM3PGBLK"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
<link rel="stylesheet" href="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css" />
<script type="text/javascript" src="http://api.map.baidu.com/library/CurveLine/1.5/src/CurveLine.min.js"></script>
<style type="text/css">
    body, html, #allmap {
        width: 100%;
        height: 800px;
        overflow: hidden;
        margin: 0;
        font-family: "微软雅黑";
    }
</style>


<div id="allmap"></div>

<script type="text/javascript">
    // 百度地图API功能
    var map = new BMap.Map("allmap");    // 创建Map实例
    map.centerAndZoom(new BMap.Point(120.7480900000, 27.9703830000), 13);  // 初始化地图,设置中心点坐标和地图级别
    //添加地图类型控件
    map.addControl(new BMap.MapTypeControl({
        mapTypes: [
            BMAP_NORMAL_MAP,
            BMAP_HYBRID_MAP
        ]
    }));
    var overlays = [];
    var overlaycomplete = function (e) {
        overlays.push(e.overlay);
        alert(overlays);
    };
    map.setCurrentCity("重庆");          // 设置地图显示的城市 此项是必须设置的
    map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放

    var styleOptions = {
        strokeColor: "red",    //边线颜色。
        fillColor: "red",      //填充颜色。当参数为空时，圆形将没有填充效果。
        strokeWeight: 3,       //边线的宽度，以像素为单位。
        strokeOpacity: 0.8,    //边线透明度，取值范围0 - 1。
        fillOpacity: 0.6,      //填充的透明度，取值范围0 - 1。
        strokeStyle: 'solid' //边线的样式，solid或dashed。
    }

    //实例化鼠标绘制工具
    var drawingManager = new BMapLib.DrawingManager(map, {
        isOpen: false, //是否开启绘制模式
        enableDrawingTool: true, //是否显示工具栏
        drawingToolOptions: {
            anchor: BMAP_ANCHOR_TOP_RIGHT, //位置
            offset: new BMap.Size(5, 5), //偏离值
        },
        circleOptions: styleOptions, //圆的样式
        polylineOptions: styleOptions, //线的样式
        polygonOptions: styleOptions, //多边形的样式
        rectangleOptions: styleOptions //矩形的样式
    });
    drawingManager.addEventListener('overlaycomplete', overlaycomplete);
    var opts = {
        width: 250,     // 信息窗口宽度
        height: 150,     // 信息窗口高度
        title: "信息窗口", // 信息窗口标题
        enableMessage: true//设置允许信息窗发送短息
    };


    function showLine(id) {
        $.post("/Home/GetLocaHis", { itemId: id }, function (e) {
            var points = [];
            for (var i = 0; i < e.length; i++) {
                var point = new BMap.Point(e[i].Lng, e[i].Lat);
                points.push(point);
            };
            map.clearOverlays();
            var polyline = new BMap.Polyline(points, { strokeColor: "blue", strokeWeight: 2, strokeOpacity: 0.5 });   //创建折线
            map.addOverlay(polyline);   //增加折线
        }, "json")


        //


    }

    $(function () {



        $.post("/Home/GetLocations", {}, function (e) {
            for (var i = 0; i < e.length; i++) {
                var marker = new BMap.Marker(new BMap.Point(e[i].Lng, e[i].Lat));  // 创建标注
                var content = e[i];
                map.addOverlay(marker);               // 将标注添加到地图中
                addClickHandler(content, marker);
            };
        }, "json")
    })

    function addClickHandler(content, marker) {
        marker.addEventListener("click", function (e) {
            openInfo(content, e)
        }
        );
    }
    function openInfo(content, e) {
        var p = e.target;
        var point = new BMap.Point(p.getPosition().lng, p.getPosition().lat);
        var info = "车牌:" + content.Code + "位置信息:" + content.LoacationInfo + ",状态:" + content.States

        info += '<button onclick="showLine(\'' + content.Id + '\')">显示轨迹</button>';
        var infoWindow = new BMap.InfoWindow(info, opts);  // 创建信息窗口对象
        map.openInfoWindow(infoWindow, point); //开启信息窗口
    }
</script>